#
# This properties file allows you to set global properties for the opennms
# application.  These properties will be set as system properties at the
# beginning of Java startup.  Any properties set on the Java command-line
# with -Dproperty=value will be overridden by these values.
#

# ###### SNMP ######
# OpenNMS provides two different SNMP implementations.  JoeSNMP is the
# original OpenNMS # SNMP Library and provides SNMP v1 and v2 support.
# SNMP4J is a new 100% Java SNMP library # that provides support for SNMP
# v1, v2 and v3.  
#
# To enable the JoeSnmp library uncomment the following line.
#org.opennms.snmp.strategyClass=org.opennms.netmgt.snmp.joesnmp.JoeSnmpStrategy
#
# The SNMP4J library is currently the default.  But can also be set with
# the following line.
#
# Default:
#org.opennms.snmp.strategyClass=org.opennms.netmgt.snmp.snmp4j.Snmp4JStrategy

# ###### DATA COLLECTION ######
# On very large systems the OpenNMS default mechanism of storing one data
# source per RRD file can be very I/O Intensive.  Many I/O subsystems fail
# to keep up with the vast amounts of data that OpenNMS can collect in this
# situation.  We have found that in those situations having fewer large files
# with multiple data sources in each performs better than many smaller files,
# each with a single data source.  This option enables all of the data sources
# belonging to a single collection group to be stored together in a single
# file.  To enable this setting uncomment the below line and change it to
# 'true'.  Also note that the snmp-graph.properties will need to change as
# it indicates which files need to exist for each graph.  Look in 
# $OPENNMS_HOME/etc/examples/store-by-group-snmp-graph.properties for an
# example of the changes.
# 
# Default: false
org.opennms.rrd.storeByGroup=false

# RRD base directory 
rrd.base.dir=/opt/opennms/share/rrd

# RRD binary path (only used if the JniRrdStrategy is used)
rrd.binary=/usr/bin/rrdtool

#
# Collectd Instrumentation class
# org.opennms.collectd.instrumentationClass=org.opennms.netmgt.collectd.DefaultCollectInstrumentation

###### REMOTE METHOD INVOCATION ######
# Though this is not strictly an OpenNMS property this is a setting that you
# may need to set if you are using the distributed monitor either via webstart
# or the command-line remote poller.  In these cases, all of the remote
# monitors need a hostname or IP address they can resolve to locate the
# central OpenNMS server.  This code uses Java's RMI protocol to communicate
# and needs to know the name the client will use to connect.  This will be
# especially true if the client must connect to the server thru a firewall.
#
# The default behavior is for it to pick one of the IP addresses of the server
# host.
#
#java.rmi.server.hostname=<some server ip address>

###### SERVICE REGISTRATION ######
# service registration, possible classes are AppleStrategy, JMDNSStrategy, NullStrategy
#org.opennms.serviceregistration.strategy=org.opennms.serviceregistration.strategies.NullStrategy

###### TROUBLE TICKETING ######
# The ticket plugin implementation to use to create tickets via the Alarm details
# pages (if configured).  The NullTicketerPlugin just does nothing when attempting
# to create tickets.
opennms.ticketer.plugin=org.opennms.netmgt.ticketd.NullTicketerPlugin

# Set this property to enable the creating of trouble tickets from the alarm details page.
# In order to set this a trouble ticketing plugin must be configured in the opennms daemon.
#
# The default value is false (ie trouble tickets cannot be created via the alarm details page)
# opennms.alarmTroubleTicketEnabled = false

# Example for templating an HTML reference with the ticket ID 
# This is an example for use with the CentricCRM Plugin
#opennms.alarmTroubleTicketLinkTemplate = <a href="http://localhost:8080/centric/TroubleTickets.do?command=Details&id=org.opennms:opennms-daemon:tgz:1.3.9">org.opennms:opennms-daemon:tgz:1.3.9</a>

###### DATABASE ######
# FIXME: this is duplicating /opt/opennms/etc/opennms-datasources.xml
opennms.db.driver=org.postgresql.Driver
opennms.db.url=jdbc:postgresql://localhost:5432/opennms
opennms.db.user=opennms
opennms.db.password=opennms
opennms.db.poolman=org.opennms.core.resource.db.SimpleDbConnectionFactory

# findByServiceType query
# org.opennms.dao.ipinterface.findByServiceType=select distinct ipIf from OnmsIpInterface as ipIf join ipIf.monitoredServices as monSvc where monSvc.serviceType.name = ?

# If you change the above query to load the snmpInterfaces along with the if and node data then set it true 
# org.opennms.netmgt.collectd.DefaultCollectionAgent.loadSnmpDataOnInit=false

###### MISCELLANEOUS ######

distributed.layoutApplicationsVertically=false
opennms.bin.dir=/opt/opennms/bin
opennms.webapplogs.dir=/opt/opennms/logs/webapp
java.awt.headless=true
version.display=1.3.9

###### REPORTING ######
opennms.report.dir=/opt/opennms/share/reports
ksc.default.graphsPerLine=1

###### EVENTD IPC ######
# The hostname/IP address of the RTCd host for sending subscribe event.
opennms.rtc.event.proxy.host = 127.0.0.1

# The port of the RTCd host for sending subscribe event (Requires host to be configured).
opennms.rtc.event.proxy.port = 5817

###### RTC IPC ######
# The base of a URL that RTC clients use when creating a RTC subscription URL.
# If you are using Tomcat instead of the built-in Jetty, change this in
# WEB-INF/configuration.properties instead.
opennms.rtc-client.http-post.base-url = http://localhost:8980/opennms/rtc/post

# The username the RTC uses when authenticating itself in an HTTP POST.
opennms.rtc-client.http-post.username = rtc

# The password the RTC uses when authenticating itself in an HTTP POST.
opennms.rtc-client.http-post.password = rtc

###### MAP IPC ######
# The base of a URL that Map System clients use when creating a Map subscription URL.
# If you are using Tomcat instead of the built-in Jetty, change this in
# WEB-INF/configuration.properties instead.
opennms.map-client.http-post.url = http://localhost:8980/opennms/map/post

# The username the Map System uses when authenticating itself in an HTTP POST.
opennms.map-client.http-post.username = map

# The password the Map System uses when authenticating itself in an HTTP POST.
opennms.map-client.http-post.password = map

###### JETTY WEB UI ######
# If you are using Jetty, this is the port to listen on
org.opennms.netmgt.jetty.port = 8980

# By default, Jetty will listen on all interfaces. You can set a specific
# bind address here. If you set this to a value other than 127.0.0.1,
# you will need to update the rtc-client and map-client URLs above.
#org.opennms.netmgt.jetty.host = 127.0.0.1

# If OpenNMS is setting an incorrect HTML <base> tag, you can override
# its idea of the local URL here. The URL must end with a '/'. The following
# substitutions are available:
# %s: scheme (http, https)
# %h, %p: host and port from the Host: header
# %x: host and port from the X-Forwarded-Host, X-Host or Host header
# %c: context path (without trailing slash)
#
# You can use this to get Jetty working behind an Apache/SSL proxy.
# Set the base-url to https://%x%c/ and include in your Apache SSL vhost:
#     <Location /opennms>
#         ProxyPass http://127.0.0.1:8980/opennms
#         ProxyPassReverse http://127.0.0.1:8980/opennms
#     </Location>
#
#opennms.web.base-url = https://%x%c/
